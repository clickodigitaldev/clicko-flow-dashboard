{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n    this.token = localStorage.getItem('authToken');\n  }\n\n  // Set auth token\n  setToken(token) {\n    this.token = token;\n    if (token) {\n      localStorage.setItem('authToken', token);\n    } else {\n      localStorage.removeItem('authToken');\n    }\n  }\n\n  // Get auth headers\n  getAuthHeaders() {\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    if (this.token) {\n      headers.Authorization = `Bearer ${this.token}`;\n    }\n    return headers;\n  }\n\n  // Generic request method\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getAuthHeaders(),\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Something went wrong');\n      }\n      return data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n\n  // GET request\n  async get(endpoint) {\n    return this.request(endpoint, {\n      method: 'GET'\n    });\n  }\n\n  // POST request\n  async post(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  }\n\n  // PUT request\n  async put(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  }\n\n  // DELETE request\n  async delete(endpoint) {\n    return this.request(endpoint, {\n      method: 'DELETE'\n    });\n  }\n\n  // PATCH request\n  async patch(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'PATCH',\n      body: JSON.stringify(data)\n    });\n  }\n\n  // Health check\n  async healthCheck() {\n    return this.request('/health', {\n      method: 'GET'\n    });\n  }\n\n  // Authentication\n  async register(userData) {\n    const response = await this.post('/auth/register', userData);\n    if (response.token) {\n      this.setToken(response.token);\n    }\n    return response;\n  }\n  async login(credentials) {\n    const response = await this.post('/auth/login', credentials);\n    if (response.token) {\n      this.setToken(response.token);\n    }\n    return response;\n  }\n  logout() {\n    this.setToken(null);\n  }\n  async getProfile() {\n    return this.get('/auth/profile');\n  }\n  async updateProfile(profileData) {\n    return this.put('/auth/profile', profileData);\n  }\n\n  // Projects\n  async getProjects() {\n    return this.get('/projects');\n  }\n  async getProject(id) {\n    return this.get(`/projects/${id}`);\n  }\n  async createProject(projectData) {\n    return this.post('/projects', projectData);\n  }\n  async updateProject(id, projectData) {\n    return this.put(`/projects/${id}`, projectData);\n  }\n  async deleteProject(id) {\n    return this.delete(`/projects/${id}`);\n  }\n  async updateProjectStatus(id, status) {\n    return this.patch(`/projects/${id}/status`, {\n      status\n    });\n  }\n\n  // Settings\n  async getSettings() {\n    return this.get('/settings');\n  }\n  async updateSettings(settingsData) {\n    return this.put('/settings', settingsData);\n  }\n\n  // Salesmate Integration\n  async testSalesmateConnection(apiKey, baseUrl) {\n    return this.post('/salesmate/test-connection', {\n      apiKey,\n      baseUrl\n    });\n  }\n  async syncSalesmateDeals() {\n    return this.post('/salesmate/sync-won-deals');\n  }\n  async getSalesmateStatus() {\n    return this.get('/salesmate/status');\n  }\n\n  // Forecasting\n  async getForecast() {\n    return this.get('/forecast/24-month');\n  }\n  async getCashFlow() {\n    return this.get('/forecast/cash-flow');\n  }\n  async getProfitability() {\n    return this.get('/forecast/profitability');\n  }\n}\n\n// Create a singleton instance\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","token","localStorage","getItem","setToken","setItem","removeItem","getAuthHeaders","headers","Authorization","request","endpoint","options","url","config","response","fetch","data","json","ok","Error","error","console","get","method","post","body","JSON","stringify","put","delete","patch","healthCheck","register","userData","login","credentials","logout","getProfile","updateProfile","profileData","getProjects","getProject","id","createProject","projectData","updateProject","deleteProject","updateProjectStatus","status","getSettings","updateSettings","settingsData","testSalesmateConnection","apiKey","baseUrl","syncSalesmateDeals","getSalesmateStatus","getForecast","getCashFlow","getProfitability","apiService"],"sources":["/Users/masudrana/Downloads/project-dashboard/sites/clicko-flow/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5002/api';\n\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n    this.token = localStorage.getItem('authToken');\n  }\n\n  // Set auth token\n  setToken(token) {\n    this.token = token;\n    if (token) {\n      localStorage.setItem('authToken', token);\n    } else {\n      localStorage.removeItem('authToken');\n    }\n  }\n\n  // Get auth headers\n  getAuthHeaders() {\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    if (this.token) {\n      headers.Authorization = `Bearer ${this.token}`;\n    }\n\n    return headers;\n  }\n\n  // Generic request method\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getAuthHeaders(),\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Something went wrong');\n      }\n\n      return data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }\n\n  // GET request\n  async get(endpoint) {\n    return this.request(endpoint, { method: 'GET' });\n  }\n\n  // POST request\n  async post(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  // PUT request\n  async put(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  // DELETE request\n  async delete(endpoint) {\n    return this.request(endpoint, { method: 'DELETE' });\n  }\n\n  // PATCH request\n  async patch(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'PATCH',\n      body: JSON.stringify(data),\n    });\n  }\n\n  // Health check\n  async healthCheck() {\n    return this.request('/health', { method: 'GET' });\n  }\n\n  // Authentication\n  async register(userData) {\n    const response = await this.post('/auth/register', userData);\n    if (response.token) {\n      this.setToken(response.token);\n    }\n    return response;\n  }\n\n  async login(credentials) {\n    const response = await this.post('/auth/login', credentials);\n    if (response.token) {\n      this.setToken(response.token);\n    }\n    return response;\n  }\n\n  logout() {\n    this.setToken(null);\n  }\n\n  async getProfile() {\n    return this.get('/auth/profile');\n  }\n\n  async updateProfile(profileData) {\n    return this.put('/auth/profile', profileData);\n  }\n\n  // Projects\n  async getProjects() {\n    return this.get('/projects');\n  }\n\n  async getProject(id) {\n    return this.get(`/projects/${id}`);\n  }\n\n  async createProject(projectData) {\n    return this.post('/projects', projectData);\n  }\n\n  async updateProject(id, projectData) {\n    return this.put(`/projects/${id}`, projectData);\n  }\n\n  async deleteProject(id) {\n    return this.delete(`/projects/${id}`);\n  }\n\n  async updateProjectStatus(id, status) {\n    return this.patch(`/projects/${id}/status`, { status });\n  }\n\n  // Settings\n  async getSettings() {\n    return this.get('/settings');\n  }\n\n  async updateSettings(settingsData) {\n    return this.put('/settings', settingsData);\n  }\n\n  // Salesmate Integration\n  async testSalesmateConnection(apiKey, baseUrl) {\n    return this.post('/salesmate/test-connection', { apiKey, baseUrl });\n  }\n\n  async syncSalesmateDeals() {\n    return this.post('/salesmate/sync-won-deals');\n  }\n\n  async getSalesmateStatus() {\n    return this.get('/salesmate/status');\n  }\n\n  // Forecasting\n  async getForecast() {\n    return this.get('/forecast/24-month');\n  }\n\n  async getCashFlow() {\n    return this.get('/forecast/cash-flow');\n  }\n\n  async getProfitability() {\n    return this.get('/forecast/profitability');\n  }\n}\n\n// Create a singleton instance\nconst apiService = new ApiService();\n\nexport default apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}