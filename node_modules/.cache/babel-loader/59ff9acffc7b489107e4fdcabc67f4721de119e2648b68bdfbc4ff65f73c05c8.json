{"ast":null,"code":"var _jsxFileName = \"/Users/masudrana/Downloads/project-dashboard/sites/clicko-flow/src/components/SummaryCards.js\";\nimport React from 'react';\nimport { TrendingUp, DollarSign, Calendar, Target, TrendingDown, PiggyBank } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SummaryCards = ({\n  projects,\n  currentMonth\n}) => {\n  const currentMonthProjects = projects.filter(p => p.monthOfPayment === currentMonth);\n  const totalProjects = currentMonthProjects.length;\n  const totalDeposits = currentMonthProjects.reduce((sum, p) => sum + p.depositPaid, 0);\n  const totalExpectedPayments = currentMonthProjects.reduce((sum, p) => sum + (p.totalAmount - p.depositPaid), 0);\n  const targetAchievement = (totalDeposits / 150000 * 100).toFixed(1);\n\n  // Calculate meaningful progress metrics\n  const completedProjects = currentMonthProjects.filter(p => p.status === 'Completed').length;\n  const completionRate = totalProjects > 0 ? (completedProjects / totalProjects * 100).toFixed(1) : 0;\n  const totalProjectValue = currentMonthProjects.reduce((sum, p) => sum + p.totalAmount, 0);\n  const depositRate = totalProjectValue > 0 ? (totalDeposits / totalProjectValue * 100).toFixed(1) : 0;\n\n  // Break-even calculations\n  const monthlyFixedCosts = 50000; // Demo fixed costs\n  const totalRevenue = totalDeposits + totalExpectedPayments;\n  const breakEvenPercentage = (totalRevenue / monthlyFixedCosts * 100).toFixed(1);\n  const isBreakEvenAchieved = totalRevenue >= monthlyFixedCosts;\n\n  // Profit calculations\n  const estimatedProfit = totalRevenue - monthlyFixedCosts;\n  const isProfitPositive = estimatedProfit >= 0;\n  const cards = [{\n    title: \"Total Projects\",\n    value: totalProjects,\n    icon: /*#__PURE__*/_jsxDEV(Calendar, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this),\n    gradient: \"gradient-card-cyan\",\n    glow: \"glow-cyan\",\n    delay: \"0ms\",\n    color: \"#06b6d4\",\n    showProgress: true,\n    progressValue: completionRate,\n    progressLabel: \"Completion Rate\",\n    subtitle: `${completedProjects} completed`\n  }, {\n    title: \"Deposits Received\",\n    value: `$${totalDeposits.toLocaleString()}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarSign, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this),\n    gradient: \"gradient-card-green\",\n    glow: \"glow-green\",\n    delay: \"100ms\",\n    color: \"#10b981\",\n    showProgress: true,\n    progressValue: depositRate,\n    progressLabel: \"Deposit Rate\",\n    subtitle: `${depositRate}% collected`\n  }, {\n    title: \"Expected Payments\",\n    value: `$${totalExpectedPayments.toLocaleString()}`,\n    icon: /*#__PURE__*/_jsxDEV(TrendingUp, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this),\n    gradient: \"gradient-card-purple\",\n    glow: \"glow-purple\",\n    delay: \"200ms\",\n    color: \"#8b5cf6\",\n    showProgress: true,\n    progressValue: completionRate,\n    progressLabel: \"Completion Rate\",\n    subtitle: `${completionRate}% completion`\n  }, {\n    title: \"Target Achievement\",\n    value: `${targetAchievement}%`,\n    icon: /*#__PURE__*/_jsxDEV(Target, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this),\n    gradient: parseFloat(targetAchievement) >= 100 ? \"gradient-card-green\" : \"gradient-card-pink\",\n    glow: parseFloat(targetAchievement) >= 100 ? \"glow-green\" : \"glow-pink\",\n    delay: \"300ms\",\n    color: parseFloat(targetAchievement) >= 100 ? \"#10b981\" : \"#ec4899\",\n    showProgress: true,\n    progressValue: Math.min(100, parseFloat(targetAchievement)),\n    progressLabel: \"Monthly Target\",\n    subtitle: parseFloat(targetAchievement) >= 100 ? \"Target exceeded!\" : `${targetAchievement}% of $150K`\n  }, {\n    title: \"Break-even Status\",\n    value: isBreakEvenAchieved ? \"Achieved ðŸŽ‰\" : \"Pending\",\n    icon: /*#__PURE__*/_jsxDEV(TrendingDown, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this),\n    gradient: isBreakEvenAchieved ? \"gradient-card-green\" : \"gradient-card-orange\",\n    glow: isBreakEvenAchieved ? \"glow-green\" : \"glow-orange\",\n    delay: \"400ms\",\n    color: isBreakEvenAchieved ? \"#10b981\" : \"#f97316\",\n    showProgress: true,\n    progressValue: Math.min(100, parseFloat(breakEvenPercentage)),\n    progressLabel: \"Break-even Progress\",\n    subtitle: `${breakEvenPercentage}% of $50K target`\n  }, {\n    title: \"Estimated Profit\",\n    value: `$${estimatedProfit.toLocaleString()}`,\n    icon: /*#__PURE__*/_jsxDEV(PiggyBank, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this),\n    gradient: isProfitPositive ? \"gradient-card-green\" : \"gradient-card-orange\",\n    glow: isProfitPositive ? \"glow-green\" : \"glow-orange\",\n    delay: \"500ms\",\n    color: isProfitPositive ? \"#10b981\" : \"#f97316\",\n    showProgress: true,\n    progressValue: isProfitPositive ? 100 : Math.min(100, Math.abs(estimatedProfit) / monthlyFixedCosts * 100),\n    progressLabel: isProfitPositive ? \"Profit Status\" : \"Loss Status\",\n    subtitle: isProfitPositive ? \"Profit earned ðŸŽ‰\" : \"Loss incurred\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4 mb-8\",\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `glass-card glass-card-hover p-6 animate-fade-in-up ${card.glow}`,\n      style: {\n        animationDelay: card.delay\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `icon-container ${card.gradient} text-white`,\n          children: card.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-2 h-2 rounded-full\",\n          style: {\n            backgroundColor: card.color,\n            opacity: 0.6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-sm font-medium opacity-90\",\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-3xl font-bold text-white\",\n          children: card.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), card.subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-white opacity-70\",\n          children: card.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), card.showProgress && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-white bg-opacity-10 rounded-full h-2 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `h-2 rounded-full ${card.gradient}`,\n              style: {\n                width: `${Math.min(100, parseFloat(card.progressValue))}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between text-xs text-white opacity-70 mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: card.progressLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [card.progressValue, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_c = SummaryCards;\nexport default SummaryCards;\nvar _c;\n$RefreshReg$(_c, \"SummaryCards\");","map":{"version":3,"names":["React","TrendingUp","DollarSign","Calendar","Target","TrendingDown","PiggyBank","jsxDEV","_jsxDEV","Fragment","_Fragment","SummaryCards","projects","currentMonth","currentMonthProjects","filter","p","monthOfPayment","totalProjects","length","totalDeposits","reduce","sum","depositPaid","totalExpectedPayments","totalAmount","targetAchievement","toFixed","completedProjects","status","completionRate","totalProjectValue","depositRate","monthlyFixedCosts","totalRevenue","breakEvenPercentage","isBreakEvenAchieved","estimatedProfit","isProfitPositive","cards","title","value","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","gradient","glow","delay","color","showProgress","progressValue","progressLabel","subtitle","toLocaleString","parseFloat","Math","min","abs","children","map","card","index","style","animationDelay","backgroundColor","opacity","width","_c","$RefreshReg$"],"sources":["/Users/masudrana/Downloads/project-dashboard/sites/clicko-flow/src/components/SummaryCards.js"],"sourcesContent":["import React from 'react';\nimport { TrendingUp, DollarSign, Calendar, Target, TrendingDown, PiggyBank } from 'lucide-react';\n\nconst SummaryCards = ({ projects, currentMonth }) => {\n  const currentMonthProjects = projects.filter(p => p.monthOfPayment === currentMonth);\n  \n  const totalProjects = currentMonthProjects.length;\n  const totalDeposits = currentMonthProjects.reduce((sum, p) => sum + p.depositPaid, 0);\n  const totalExpectedPayments = currentMonthProjects.reduce((sum, p) => sum + (p.totalAmount - p.depositPaid), 0);\n  const targetAchievement = ((totalDeposits / 150000) * 100).toFixed(1);\n\n  // Calculate meaningful progress metrics\n  const completedProjects = currentMonthProjects.filter(p => p.status === 'Completed').length;\n  const completionRate = totalProjects > 0 ? ((completedProjects / totalProjects) * 100).toFixed(1) : 0;\n  \n  const totalProjectValue = currentMonthProjects.reduce((sum, p) => sum + p.totalAmount, 0);\n  const depositRate = totalProjectValue > 0 ? ((totalDeposits / totalProjectValue) * 100).toFixed(1) : 0;\n\n  // Break-even calculations\n  const monthlyFixedCosts = 50000; // Demo fixed costs\n  const totalRevenue = totalDeposits + totalExpectedPayments;\n  const breakEvenPercentage = ((totalRevenue / monthlyFixedCosts) * 100).toFixed(1);\n  const isBreakEvenAchieved = totalRevenue >= monthlyFixedCosts;\n  \n  // Profit calculations\n  const estimatedProfit = totalRevenue - monthlyFixedCosts;\n  const isProfitPositive = estimatedProfit >= 0;\n\n  const cards = [\n    {\n      title: \"Total Projects\",\n      value: totalProjects,\n      icon: <Calendar className=\"w-6 h-6\" />,\n      gradient: \"gradient-card-cyan\",\n      glow: \"glow-cyan\",\n      delay: \"0ms\",\n      color: \"#06b6d4\",\n      showProgress: true,\n      progressValue: completionRate,\n      progressLabel: \"Completion Rate\",\n      subtitle: `${completedProjects} completed`\n    },\n    {\n      title: \"Deposits Received\",\n      value: `$${totalDeposits.toLocaleString()}`,\n      icon: <DollarSign className=\"w-6 h-6\" />,\n      gradient: \"gradient-card-green\",\n      glow: \"glow-green\",\n      delay: \"100ms\",\n      color: \"#10b981\",\n      showProgress: true,\n      progressValue: depositRate,\n      progressLabel: \"Deposit Rate\",\n      subtitle: `${depositRate}% collected`\n    },\n    {\n      title: \"Expected Payments\",\n      value: `$${totalExpectedPayments.toLocaleString()}`,\n      icon: <TrendingUp className=\"w-6 h-6\" />,\n      gradient: \"gradient-card-purple\",\n      glow: \"glow-purple\",\n      delay: \"200ms\",\n      color: \"#8b5cf6\",\n      showProgress: true,\n      progressValue: completionRate,\n      progressLabel: \"Completion Rate\",\n      subtitle: `${completionRate}% completion`\n    },\n    {\n      title: \"Target Achievement\",\n      value: `${targetAchievement}%`,\n      icon: <Target className=\"w-6 h-6\" />,\n      gradient: parseFloat(targetAchievement) >= 100 ? \"gradient-card-green\" : \"gradient-card-pink\",\n      glow: parseFloat(targetAchievement) >= 100 ? \"glow-green\" : \"glow-pink\",\n      delay: \"300ms\",\n      color: parseFloat(targetAchievement) >= 100 ? \"#10b981\" : \"#ec4899\",\n      showProgress: true,\n      progressValue: Math.min(100, parseFloat(targetAchievement)),\n      progressLabel: \"Monthly Target\",\n      subtitle: parseFloat(targetAchievement) >= 100 ? \"Target exceeded!\" : `${targetAchievement}% of $150K`\n    },\n    {\n      title: \"Break-even Status\",\n      value: isBreakEvenAchieved ? \"Achieved ðŸŽ‰\" : \"Pending\",\n      icon: <TrendingDown className=\"w-6 h-6\" />,\n      gradient: isBreakEvenAchieved ? \"gradient-card-green\" : \"gradient-card-orange\",\n      glow: isBreakEvenAchieved ? \"glow-green\" : \"glow-orange\",\n      delay: \"400ms\",\n      color: isBreakEvenAchieved ? \"#10b981\" : \"#f97316\",\n      showProgress: true,\n      progressValue: Math.min(100, parseFloat(breakEvenPercentage)),\n      progressLabel: \"Break-even Progress\",\n      subtitle: `${breakEvenPercentage}% of $50K target`\n    },\n    {\n      title: \"Estimated Profit\",\n      value: `$${estimatedProfit.toLocaleString()}`,\n      icon: <PiggyBank className=\"w-6 h-6\" />,\n      gradient: isProfitPositive ? \"gradient-card-green\" : \"gradient-card-orange\",\n      glow: isProfitPositive ? \"glow-green\" : \"glow-orange\",\n      delay: \"500ms\",\n      color: isProfitPositive ? \"#10b981\" : \"#f97316\",\n      showProgress: true,\n      progressValue: isProfitPositive ? 100 : Math.min(100, Math.abs(estimatedProfit) / monthlyFixedCosts * 100),\n      progressLabel: isProfitPositive ? \"Profit Status\" : \"Loss Status\",\n      subtitle: isProfitPositive ? \"Profit earned ðŸŽ‰\" : \"Loss incurred\"\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-4 mb-8\">\n      {cards.map((card, index) => (\n        <div \n          key={index} \n          className={`glass-card glass-card-hover p-6 animate-fade-in-up ${card.glow}`}\n          style={{ animationDelay: card.delay }}\n        >\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className={`icon-container ${card.gradient} text-white`}>\n              {card.icon}\n            </div>\n            <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: card.color, opacity: 0.6 }}></div>\n          </div>\n          \n          <div className=\"space-y-3\">\n            <p className=\"text-white text-sm font-medium opacity-90\">{card.title}</p>\n            <p className=\"text-3xl font-bold text-white\">\n              {card.value}\n            </p>\n            \n            {/* Show subtitle for all cards */}\n            {card.subtitle && (\n              <p className=\"text-sm text-white opacity-70\">{card.subtitle}</p>\n            )}\n            \n            {/* Show progress bar for all cards */}\n            {card.showProgress && (\n              <>\n                <div className=\"w-full bg-white bg-opacity-10 rounded-full h-2 mt-2\">\n                  <div \n                    className={`h-2 rounded-full ${card.gradient}`}\n                    style={{ width: `${Math.min(100, parseFloat(card.progressValue))}%` }}\n                  ></div>\n                </div>\n                <div className=\"flex justify-between text-xs text-white opacity-70 mt-1\">\n                  <span>{card.progressLabel}</span>\n                  <span>{card.progressValue}%</span>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SummaryCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}