{"ast":null,"code":"var _jsxFileName = \"/Users/masudrana/Downloads/project-dashboard/sites/clicko-flow/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is authenticated on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          apiService.setToken(token);\n          const userData = await apiService.getProfile();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('authToken');\n          apiService.setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await apiService.register(userData);\n      setUser(response);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await apiService.login(credentials);\n      setUser(response);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    apiService.logout();\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('authToken');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const updatedUser = await apiService.updateProfile(profileData);\n      setUser(updatedUser);\n      return updatedUser;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuth","token","localStorage","getItem","setToken","userData","getProfile","error","console","removeItem","register","response","login","credentials","logout","updateProfile","profileData","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/masudrana/Downloads/project-dashboard/sites/clicko-flow/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiService from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is authenticated on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        try {\n          apiService.setToken(token);\n          const userData = await apiService.getProfile();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('authToken');\n          apiService.setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      const response = await apiService.register(userData);\n      setUser(response);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (credentials) => {\n    try {\n      setLoading(true);\n      const response = await apiService.login(credentials);\n      setUser(response);\n      setIsAuthenticated(true);\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    apiService.logout();\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('authToken');\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const updatedUser = await apiService.updateProfile(profileData);\n      setUser(updatedUser);\n      return updatedUser;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    updateProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}